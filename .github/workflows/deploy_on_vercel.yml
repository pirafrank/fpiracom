# deploy fpira.com using GitHub Actions

name: 'deploy on vercel'

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '_jekyll_ignore/**'
      - README.md
      - '.gitignore'
      - '_drafts'
      - 'repo_utils/**'
      - '.vscode'
      - '.vercelignore'
  # schedule is in UTC using cron syntax
  schedule:
    - cron: '45 8 * * *'
  workflow_dispatch:
    inputs:
      target_ref:
        description: "branch or ref to checkout to"
        required: false
        default: ''

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-20.04
    outputs:
      RUN_BUILD: ${{ steps.check_new_posts.outputs.RUN_BUILD }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.target_ref }}
      - name: Check for new blog posts
        id: check_new_posts
        shell: bash
        run: |
          # if run on schedule, check for new posts
          if [ ${GITHUB_EVENT_NAME} = 'schedule' ]; then
            if [ $(ls -1 _posts | grep $(date '+%Y-%m-%d')) ]; then
              echo "New posts found with today date"
              echo "::set-output name=RUN_BUILD::true"
            else
              echo "No new posts to publish with today date."
              echo "::set-output name=RUN_BUILD::false"
            fi
          else
            echo "No checks to perform, about to run build..."
            echo "::set-output name=RUN_BUILD::true"
          fi
  build:
    name: Deploy on vercel
    runs-on: ubuntu-20.04
    needs: [checks]
    if: contains(needs.checks.outputs.RUN_BUILD, 'true')
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.target_ref }}
    - name: Get current ref (branch name or commit id)
      id: get_current_ref
      shell: bash
      run: |
        # workflow_dispatch issue: $GITHUB_REF is set to the default branch,
        # even if actions/checkout@v2 checkouts to a different ref
        if [ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]; then
          if [ "$(git rev-parse --abbrev-ref HEAD)" == 'HEAD' ]; then
            # case detached HEAD
            REF="$(git rev-parse --short HEAD)"
          else
            # HEAD pointing to a branch
            REF="$(git rev-parse --abbrev-ref HEAD)"
          fi
        else
          REF="${GITHUB_REF#refs/heads/}"
        fi
        # set as step output and as env
        echo "::set-output name=REF::${REF}"
        echo "GIT_REF=${REF}" >> $GITHUB_ENV
    - name: Get vercel args
      id: get_vercel_args
      shell: bash
      run: |
        if [ ${{ env.GIT_REF }} == 'main' ]; then
          echo "::set-output name=VERCEL_ARGS::$(echo '--prod')"
        else
          echo "::set-output name=VERCEL_ARGS::$(echo '')"
        fi
    - name: Setup node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Generate JSONP files
      shell: bash
      run: |
        bash repo_utils/list_categories.sh | awk '{ print $2 }' | sort | node repo_utils/jsonp_generator.js categories
        bash repo_utils/list_tags.sh | awk '{ print $2 }' | sort | node repo_utils/jsonp_generator.js tags
    - name: Generate _data/git.json file
      shell: bash
      run: |
        node repo_utils/git_info.js
    - name: Deploy to vercel
      id: deploy_to_vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-args: ${{ steps.get_vercel_args.outputs.VERCEL_ARGS }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        alias-domains: |
          fpiracom-{{BRANCH}}-pirafrank.vercel.app
    - name: Send Push Notification
      uses: fjogeleit/http-request-action@master
      if: always()
      with:
        url: ${{ secrets.NOTIFICATION_WEBHOOK_URI }}
        method: 'POST'
        data: '{ "value1": "[GitHub] pirafrank/fpiracom", "value2": "Build of fpira.com (ref ${{ env.GIT_REF }}) finished with status ${{job.status}}.<br>Vercel deployment: ${{ steps.deploy_to_vercel.outputs.preview-name }}<br>Vercel preview URL: ${{ steps.deploy_to_vercel.outputs.preview-url }}", "value3": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
