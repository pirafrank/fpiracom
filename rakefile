require 'html-proofer'
require 'find'

# default task

task :default => :check_install

# task groups

task :ci => [:check_install, :check_internal_urls, :check_api]

#
# task definitions
#

task :cleanup do
  sh "rm -rf _site"
end

task :serve do
  sh "bundle exec jekyll serve --livereload --future --drafts"
end

task :build => :cleanup do
  sh "bundle exec jekyll build"
end

# call with `rake list[tags]` or `rake list[tags, json]`
task :list, [:what, :format] do |t, args|
  what = args[:what]
  format = args[:format] || "csv"
  sh "bundle exec jekyll list #{what} --output #{format}"
end

task :check_install do
  sh "bundle exec jekyll doctor"
end

check_urls_options = {
  :allow_hash_href => true,
  :allow_missing_href => true,
  :ignore_empty_alt => true,
  :ignore_missing_alt => true,
  :assume_extension => '.html',
  :checks => ['Links', 'Images', 'Scripts'],
  :check_external_hash => true,
  :check_internal_hash => true,
  :directory_index_file => 'index.html',
  :enforce_https => true,
  :ignore_empty_mailto => false,
  :ignore_files => [
    # skip very old blog posts
    %r{^_site\/blog\/201\d{1}\/.*\/index.html$},
    # version may point to something not yet pushed, failing the check
    "_site/version/index.html",
  ],
  :ignore_urls => [
    %r{^https://matrix.to/.*$},
  ],
  :ignore_status_codes => [
    401,
    403,
    999
  ],
  :only_4xx => false,
  :hydra => {
    :max_concurrency => 50
  },
  :typhoeus => {
    :headers => {
      "User-Agent" => "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"
    },
    :followlocation => true,
    :connecttimeout => 10,
    :timeout => 30,
    :ssl_verifyhost => 2,
    :ssl_verifypeer => true
  },
  :cache => {
    :timeframe => {
      :external => "2w",
      :internal => "1d"
    },
    :storage_dir => ".html_proofer_cache",
    :cache_file => "cache.json"
  }
}

task :check_urls => :build do
  options = check_urls_options
  options[:disable_external] = false
  HTMLProofer.check_directory('_site/', options).run
end

task :check_internal_urls => :build do
  options = check_urls_options
  options[:disable_external] = true
  HTMLProofer.check_directory('_site/', options).run
end

task :check_api => :build do
  api_path = "_site/api"

  puts "\n\nChecking API files in '#{api_path}' for valid JSON content\n\n"
  api_files = []
  Find.find(api_path) do |path|
    if path =~ /index\.json$/
      puts "Found API file: #{path}"
      api_files << path
    end
  end
  puts "\nFound #{api_files.length} API file#{api_files.length > 1 ? 's' : ''}\n\n"

  onError = 0
  api_files.each do |file|
    json_content = File.read(file)
    begin
      JSON.parse(json_content)
    rescue JSON::ParserError => e
      onError += 1
      puts "Invalid JSON content in file: #{file}"
      puts "#{e.message}\n\n"
    end
  end
  puts "\nFinished: Found #{onError} files with invalid JSON content\n\n"
  exit 1 if onError > 0
end
