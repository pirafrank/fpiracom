# .github/actions/setup-jekyll-env/action.yml

name: Setup Jekyll environment
description: Install Ruby, Bundler and Jekyll dependencies
outputs:
  bundle_path:
    description: 'The path where the gems are installed'
    value: ${{ steps.setup_jekyll_env.outputs.bundle_path }}
runs:
  using: "composite"
  steps:
    - name: Extract Ruby version
      id: get_ruby_version
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: |
        ruby_version=$(cat ${GITHUB_WORKSPACE}/.ruby-version | head -n1 | grep -oE '[0-9\.]*')
        echo "ruby_version=${ruby_version}" >> $GITHUB_OUTPUT
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ steps.get_ruby_version.outputs.ruby_version }}
    - name: Cache ruby gems
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Setup Jekyll environment
      id: setup_jekyll_env
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: |
        cd $GITHUB_WORKSPACE
        BUNDLER_VERSION=$(grep 'BUNDLED WITH' -A1 Gemfile.lock | tail -n1 | awk '{print $1}')
        #sudo apt-get -yqq install libpq-dev
        #gem update --system
        gem install bundler -v ${BUNDLER_VERSION}
        bundle_path="${GITHUB_WORKSPACE}/vendor/bundle"
        bundle config path ${bundle_path}
        bundle install --jobs 4 --retry 3
        echo "Bundler version: $(bundle --version)"
        echo "Ruby version: $(ruby --version)"
        echo "Jekyll version: $(bundle exec jekyll --version)"
        # add bundle path to github output
        echo "bundle_path=${bundle_path}" >> $GITHUB_OUTPUT
