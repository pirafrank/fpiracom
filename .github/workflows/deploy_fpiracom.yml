# deploy fpira.com using GitHub Actions

name: 'deploy_fpiracom'

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '_jekyll_ignore/**'
      - README.md
      - '.gitignore'
      - '_drafts'
      - 'repo_utils/**'
      - '.vscode'
      - '.vercelignore'
      - 'vercel.json'
  # schedule is in UTC using cron syntax
  schedule:
    - cron: '45 8 * * *'
  #workflow_dispatch:

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-20.04
    outputs:
      RUN_BUILD: ${{ steps.check_new_posts.outputs.RUN_BUILD }}
    steps:
      - uses: actions/checkout@v2
      - name: Check for new blog posts
        id: check_new_posts
        shell: bash
        run: |
          # if run on schedule, check for new posts
          if [ ${GITHUB_EVENT_NAME} = 'schedule' ]; then
            if [ $(ls -1 _posts | grep $(date '+%Y-%m-%d')) ]; then
              echo "New posts found with today date"
              echo "::set-output name=RUN_BUILD::true"
            else
              echo "No new posts to publish with today date."
              echo "::set-output name=RUN_BUILD::false"
            fi
          else
            echo "No checks to perform, about to run build..."
            echo "::set-output name=RUN_BUILD::true"
          fi
  build:
    name: fpira.com build and deploy
    runs-on: ubuntu-20.04
    needs: [checks]
    if: contains(needs.checks.outputs.RUN_BUILD, 'true')
    steps:
    - uses: actions/checkout@v2
    - name: Workdir
      run: pwd
    - name: Listing files in workspace
      #run: ls -lah /home/runner/work/fpiracom/fpiracom
      run: ls -lah
    - name: Extract branch name
      id: extract_branch_name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6.6
    - name: Cache ruby gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Build jekyll website
      env:
        JEKYLL_ENV: production
      run: |
        #sudo apt-get -yqq install libpq-dev
        gem update --system
        gem install bundler:2.1.4
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bundle exec jekyll build --trace
    #- name: Setup node.js environment
    #  uses: actions/setup-node@v1
    #  with:
    #    node-version: '12.x'
    #- name: Installing sw-precache
    #  run: npm install --global sw-precache
    #- name: Creating service-worker.js file
    #  run: sw-precache --config sw-config.js
    #- name: Copying service-worker.js to _site/ directory
    #  run: cp service-worker.js _site/
    - name: Deploy to server
      uses: AEnterprise/rsync-deploy@v1.0
      env:
        DEPLOY_KEY: ${{ secrets.LEIA_RSA_PRIV_KEY }}
        ARGS: "-e -c -avhz --delete"
        SERVER_PORT: ${{ secrets.LEIA_SSH_PORT }}
        FOLDER: "./_site/"
        SERVER_IP: ${{ secrets.LEIA_SSH_HOST }}
        USERNAME: ${{ secrets.LEIA_USERNAME }}
        SERVER_DESTINATION: ${{ secrets.LEIA_DESTINATION }}
    - name: Send Push Notification
      uses: fjogeleit/http-request-action@master
      if: always()
      with:
        url: ${{ secrets.NOTIFICATION_WEBHOOK_URI }}
        method: 'POST'
        data: '{ "value1": "[GitHub] pirafrank/fpiracom", "value2": "Build of fpira.com (branch ${{ steps.extract_branch_name.outputs.branch }}) finished with status ${{job.status}}", "value3": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
